// Generated by CoffeeScript 2.4.1
(function() {
  $(document).ready(function() {
    var answer, button, err;
    button = $('#image_upload');
    return new AjaxUpload(button, {
      action: '/products/upload_image',
      name: 'image_upload',
      data: {
        id: id
      },
      onComplete: function(file, a) {}
    }, (function() {
      try {
        answer = JSON.parse(a);
        if (answer.status === '1') {
          $('.thumbnail_img').append('<div class="img_wrap"> <img src="' + answer.url + '" class="img-thumbnail" height="200px"> <span data-path="' + answer.url + '" class="deleteImg">X</span> </div>');
          return swal({
            title: "Виконано",
            type: "success",
            text: answer.message
          });
        } else {
          return swal({
            title: "Помилка",
            type: "error",
            text: answer.message
          });
        }
      } catch (error) {
        err = error;
        return swal({
          title: "Невідома помилка!",
          type: "error"
        });
      }
    })());
  });

  $(document).on('click', '.delete_image', function() {
    var src;
    src = $(this).attr('data-src');
    return swal({
      title: "Дійсно видалити?",
      text: "Відмінити дію буде неможливо!",
      type: "warning",
      showCancelButton: true,
      confirmButtonColor: "#DD6B55",
      confirmButtonText: "Видалити!",
      closeOnConfirm: false,
      html: false
    }, function() {
      return $.ajax({
        type: 'post',
        url: '/delete_temp_file',
        data: {
          path: src
        },
        success: function(answer) {
          return successHandler(answer);
        },
        error: function(answer) {
          return errorHandler(answer);
        }
      });
    });
  });

  $(document).on('click', '#update-attribute', function(event) {
    var attribute;
    event.preventDefault();
    attribute = {};
    $('input.attribute').each(function() {
      var name;
      name = $(this).attr('data-name');
      if (Array.isArray(attribute[name])) {
        return attribute[name].push($(this).val());
      } else {
        attribute[name] = [];
        return attribute[name].push($(this).val());
      }
    });
    return $.ajax({
      type: 'post',
      url: url('/products/update'),
      data: {
        id: id,
        method: 'attribute',
        data: attribute
      },
      success: function(answer) {
        return successHandler(answer);
      },
      error: function(answer) {
        return errorHandler(answer);
      }
    });
  });

  $(document).on('keyup', '#search_characteristic', function() {
    var notIn, value;
    value = $(this).val();
    if (value === '') {
      return $('.characteristic_search_result').html('');
    }
    notIn = [];
    $('.characteristic').each(function() {
      return notIn.push($(this).data('id'));
    });
    return $.ajax({
      type: 'post',
      url: url('product'),
      data: {
        action: 'search_characteristics',
        name: value,
        not: notIn
      },
      success: function(answer) {
        return $('.characteristic_search_result').html(answer);
      }
    });
  });

  $(document).on('click', '.get_searched_characteristic', function() {
    return $.ajax({
      type: 'post',
      url: '/product',
      data: {
        action: 'get_searched_characteristic',
        id: $(this).data('id')
      },
      success: (answer) => {
        $('.characteristics').prepend(answer);
        return $(this).remove();
      },
      error: function(answer) {
        return errorHandler(answer);
      }
    });
  });

  $(document).on('click', '.delete_characteristic', function() {
    return $(this).parents('.characteristic').fadeOut().remove();
  });

  $(document).on('click', '.close_characteristic_search_result', function() {
    $('#search_characteristic').val('');
    return $('.characteristic_search_result').html('');
  });

}).call(this);
